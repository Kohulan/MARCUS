version: '3.8'

services:
  # Prefetch models service
  prefetch-models:
    image: python:3.10-slim
    container_name: marcus-prefetch
    volumes:
      - ./backend:/app
    working_dir: /app
    command: bash -c "chmod +x prefetch_models.sh && ./prefetch_models.sh"

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - TARGETPLATFORM=linux/arm64
    container_name: marcus-backend
    restart: always
    depends_on:
      - prefetch-models
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL_ID=${OPENAI_MODEL_ID}
      - SECRET_KEY=${SECRET_KEY}
      - RELEASE_VERSION=${RELEASE_VERSION:-1.0}
      - HOMEPAGE_URL=${HOMEPAGE_URL:-/latest/docs}
      - DOCLING_MODELS_PATH=/app/models/docling
      - CORS_ORIGINS=${CORS_ORIGINS:-http://frontend}
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/models:/app/models
    ports:
      - "9000:9000"
    networks:
      - marcus-network
    deploy:
      resources:
        reservations:
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: marcus-frontend
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - marcus-network
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

# Network configuration
networks:
  marcus-network:
    driver: bridge

# Volumes for persistent data
volumes:
  uploads-data:
    driver: local
  models-data:
    driver: local